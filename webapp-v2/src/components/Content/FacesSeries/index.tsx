import ContentHeader from "components/ContentHeader";
import { toastError } from "components/Toast";
import { useMemo } from "react";
import { useQuery } from "react-query";
import paths from "routes/paths";
import ApiError from "services/api/Error";
import { getFacesSeries } from "services/api/FaceGeneratorApi";
import FaceSerie from "./components/FaceSerie";

const FacesSeries = () => {
  const renderSubtitle = useMemo(() => {
    return (
      <div>
        Visualize the transitions between two faces. A transition is a series of
        faces that are generated by interpolating the features of the two faces.
        <br />
        The saved series will be displayed below.
      </div>
    )
  }, [])

  const tags: string[] = [];

  const { isLoading: isLoadingSeries, data: series } = useQuery(['series', tags], () => getFacesSeries(tags), {
    onError: (error) => {
      if (error instanceof ApiError) {
        toastError(error.toString());
      }
    }
  });

  const FacesSeries = useMemo(() => {
    if (isLoadingSeries || !series) {
      return <div>Loading...</div>;
    }

    if (series.length === 0) {
      return <div>No series found.</div>;
    }

    return series.map((serie) => {
      return <FaceSerie serie={serie} className="mt-4"/>;
    });
  }, [series, isLoadingSeries]);
  
  return (
    <div>
      <ContentHeader
        title={paths.facesSeries.title}
        subtitle={renderSubtitle}
      />
      <div>
        {
          FacesSeries
        }
      </div>
    </div>
  );
};

export default FacesSeries;